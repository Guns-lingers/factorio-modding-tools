"use strict";var k=Object.create;var h=Object.defineProperty;var C=Object.getOwnPropertyDescriptor;var j=Object.getOwnPropertyNames;var D=Object.getPrototypeOf,E=Object.prototype.hasOwnProperty;var O=(e,o)=>{for(var r in o)h(e,r,{get:o[r],enumerable:!0})},P=(e,o,r,a)=>{if(o&&typeof o=="object"||typeof o=="function")for(let n of j(o))!E.call(e,n)&&n!==r&&h(e,n,{get:()=>o[n],enumerable:!(a=C(o,n))||a.enumerable});return e};var d=(e,o,r)=>(r=e!=null?k(D(e)):{},P(o||!e||!e.__esModule?h(r,"default",{value:e,enumerable:!0}):r,e)),I=e=>P(h({},"__esModule",{value:!0}),e);var J={};O(J,{activate:()=>T,deactivate:()=>A});module.exports=I(J);var t=d(require("vscode")),m=d(require("path")),v=d(require("child_process")),N=d(require("adm-zip"));var c=d(require("fs")),u=d(require("path"));function _(e,o){let r=u.join(e,o.rootName);c.mkdirSync(r,{recursive:!0});for(let i of o.dirs)c.mkdirSync(u.join(r,i.relativePath),{recursive:!0});for(let i of o.files){let s=u.join(r,i.relativePath);c.mkdirSync(u.dirname(s),{recursive:!0});let l=typeof i.content=="function"?i.content():i.content||"";c.writeFileSync(s,l)}let a=u.join(r,"info.json"),n=JSON.parse(c.readFileSync(a,"utf-8"));n.name=o.rootName,c.writeFileSync(a,JSON.stringify(n,null,2))}var x={rootName:"",dirs:[{relativePath:"locale/en"},{relativePath:"graphics/icons"},{relativePath:"prototypes"}],files:[{relativePath:"info.json",content:()=>JSON.stringify({name:"",version:"0.0.1",title:"",author:"",description:"",factorio_version:"2.0",dependencies:["base"]},null,2)},{relativePath:"control.lua",content:`-- control.lua
`},{relativePath:"data.lua",content:()=>["items","containers","recipes","technologies"].map(e=>`require("prototypes.${e}")`).join(`
`)+`
`},{relativePath:"locale/en/locale.cfg",content:""},{relativePath:"prototypes/items.lua",content:`-- items.lua
`},{relativePath:"prototypes/containers.lua",content:`-- containers.lua
`},{relativePath:"prototypes/recipes.lua",content:`-- recipes.lua
`},{relativePath:"prototypes/technologies.lua",content:`-- technologies.lua
`}]};var S=d(require("vscode")),F=d(require("path"));function M(){let e=S.workspace.workspaceFolders;if(e&&e.length>0)return F.basename(e[0].uri.fsPath)}var z=M()??"DEFAULT_MOD_NAME",g=e=>Object.fromEntries(Object.entries(e).map(([o,r])=>[o,r.replace(/{modName}/g,z)])),w={item:{...g({name:'"${1:name}"',icon:'"${2:__{modName}__/graphics/icons/item.png}"',icon_size:"${3:64}",subgroup:'"${4:raw-resource}"',order:'"${5:a[b]-c[d]}"',stack_size:"${6:100}"})},recipe:{...g({name:'"${1:name}"',category:'"${2:crafting}"',energy_required:"${3:1}",ingredients:'${4:{ type = "item", name = "iron-plate", amount = 1 }}',results:'${5:{ type = "item", name = "product", amount = 1 }}'})},container:{...g({name:'"${1:name}"',icon:'"${2:__{modName}__/graphics/icons/container.png}"',icon_size:"${3:64}",flags:'${4:{ "placeable-neutral", "player-creation" }}',minable:'${5:{ mining_time = 0.2, result = "name" }}',max_health:"${6:100}",collision_box:"${7:{{-0.35, -0.35}, {0.35, 0.35}}}",selection_box:"${8:{{-0.5, -0.5}, {0.5, 0.5}}}",inventory_size:"${9:16}",picture:'${10:{ filename = "__{modName}__/graphics/entity/entity/entity.png", priority = "extra-high", width = 64, height = 64, shift = {0, 0} }}'})},technology:{...g({name:'"${1:name}"',icon:'"${2:__{modName}__/graphics/icons/technology.png}"',icon_size:"${3:64}",prerequisites:'${4:{"automation", "steel-processing"}}',unit:'${5:{ count = 100, ingredients = {{"automation-science-pack",1}}, time = 30 }}',effects:'${6:{{ type = "unlock-recipe", recipe = "recipe-name" }}}',order:'"${7:c-a}"'})}},b=Object.keys(w);function T(e){let o=t.commands.registerCommand("factorioModHelper.createModStructure",async()=>{let n=await t.window.showOpenDialog({canSelectFolders:!0,openLabel:"Select Folder to Create Mod In"});if(!n?.length){t.window.showErrorMessage("No folder selected.");return}let i=n[0].fsPath,s=await t.window.showInputBox({prompt:"Enter mod name",placeHolder:"my-factorio-mod"});if(!s){t.window.showErrorMessage("Mod name is required.");return}let l={...x,rootName:s};try{_(i,l);let p=t.Uri.file(m.join(i,s)),f=t.workspace.workspaceFolders||[];t.workspace.updateWorkspaceFolders(f.length,0,{uri:p,name:s}),t.window.showInformationMessage(`Factorio mod structure created: ${s}`)}catch(p){t.window.showErrorMessage(`Error: ${p.message}`)}});e.subscriptions.push(o);let r=t.commands.registerCommand("factorioModHelper.packageModAsZip",async()=>{let n=await t.window.showOpenDialog({canSelectFolders:!0,openLabel:"Select mod folder to package"});if(!n?.length){t.window.showErrorMessage("No folder selected.");return}let i=n[0].fsPath,s=m.basename(i),l=m.join(m.dirname(i),`${s}.zip`);try{let p=new N.default;p.addLocalFolder(i),p.writeZip(l),t.window.showInformationMessage(`Mod packaged: ${l}`);let f=m.dirname(l),y=process.platform;y==="win32"?v.exec(`explorer.exe /select,"${l}"`):y==="darwin"?v.exec(`open "${f}"`):v.exec(`xdg-open "${f}"`)}catch(p){t.window.showErrorMessage(`Packaging error: ${p.message}`)}});e.subscriptions.push(r);let a=t.languages.registerCompletionItemProvider({language:"lua",scheme:"file"},new $,'"');e.subscriptions.push(a)}function A(){}var $=class{provideCompletionItems(o,r){let n=o.lineAt(r.line).text.slice(0,r.character);return/type\s*=\s*"$/.test(n)?b.map(i=>{let s=new t.CompletionItem(i,t.CompletionItemKind.Value);return s.insertText=new t.SnippetString(this.buildSnippet(i)),s.documentation=new t.MarkdownString(`\u0428\u0430\u0431\u043B\u043E\u043D \u0434\u043B\u044F \u043F\u0440\u043E\u0442\u043E\u0442\u0438\u043F\u0430 \`${i}\``),s}):[]}buildSnippet(o){let r=w[o],a=[`"${o}",`];for(let[i,s]of Object.entries(r))a.push(`	${i} = ${s},`);let n=a.length-1;return a[n]=a[n].replace(/,$/,""),a.join(`
`)}};0&&(module.exports={activate,deactivate});
